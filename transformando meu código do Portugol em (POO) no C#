using System;
using System.Collections.Generic;

namespace ERP_Vendas_Celulares
{
    class Program
    {
        const int LIMITE = 30;
        static List<Categoria> categorias = new List<Categoria>();
        static List<Fornecedor> fornecedores = new List<Fornecedor>();
        static List<Produto> produtos = new List<Produto>();

        static void Main()
        {
            PopularBancoDados();
            int opcao;
            do
            {
                MostrarMenu();
                if (!int.TryParse(Console.ReadLine(), out opcao)) continue;
                ExecutarOpcao(opcao);
            } while (opcao != 0);
        }

        static void MostrarMenu()
        {
            Console.WriteLine("BEM VINDO AO MEU ERP DE VENDAS DE CELULARES");
            Console.WriteLine("1 - Cadastro de Categorias\n2 - Cadastro de Fornecedores\n3 - Cadastro de Produtos");
            Console.WriteLine("4 - Listar Categorias\n5 - Listar Fornecedores\n6 - Listar Produtos\n0 - Sair");
            Console.Write("Digite sua opção: ");
        }

        static void ExecutarOpcao(int opcao)
        {
            switch (opcao)
            {
                case 1: Cadastrar(categorias, "Categoria"); break;
                case 2: Cadastrar(fornecedores, "Fornecedor"); break;
                case 3: CadastrarProduto(); break;
                case 4: Listar(categorias, "CATEGORIAS CADASTRADAS"); break;
                case 5: Listar(fornecedores, "FORNECEDORES CADASTRADOS"); break;
                case 6: ListarProdutos(); break;
                case 0: Console.WriteLine("Saindo do sistema..."); break;
                default: Console.WriteLine("Opção inválida!"); break;
            }
        }

        static void Cadastrar<T>(List<T> lista, string tipo) where T : new()
        {
            if (lista.Count < LIMITE)
            {
                Console.Write($"{tipo} (nome): ");
                lista.Add((T)Activator.CreateInstance(typeof(T), Console.ReadLine()));
                Console.WriteLine($"{tipo} cadastrada!");
            }
            else Console.WriteLine($"Limite de {tipo.ToLower()}s atingido!");
        }

        static void CadastrarProduto()
        {
            if (produtos.Count < LIMITE)
            {
                Console.Write("Nome do produto: ");
                var nome = Console.ReadLine();
                Listar(categorias, "Escolha uma categoria:");
                var categoria = categorias[int.Parse(Console.ReadLine()) - 1];
                Listar(fornecedores, "Escolha um fornecedor:");
                var fornecedor = fornecedores[int.Parse(Console.ReadLine()) - 1];
                produtos.Add(new Produto(nome, categoria, fornecedor));
                Console.WriteLine("Produto cadastrado!");
            }
            else Console.WriteLine("Limite de produtos atingido!");
        }

        static void Listar<T>(List<T> lista, string titulo)
        {
            Console.WriteLine(titulo);
            if (lista.Count > 0)
                for (int i = 0; i < lista.Count; i++)
                    Console.WriteLine($"{i + 1}. {lista[i]}");
            else Console.WriteLine("Nenhum cadastrado.");
        }

        static void ListarProdutos()
        {
            Console.WriteLine("PRODUTOS CADASTRADOS:");
            foreach (var produto in produtos)
                Console.WriteLine($"Produto: {produto.Nome}, Categoria: {produto.Categoria.Nome}, Fornecedor: {produto.Fornecedor.Nome}");
        }

        static void PopularBancoDados()
        {
            var categoriasLote = new[] { "Smartphones", "Acessórios", "Carregadores", "Capinhas", "Fones de ouvido" };
            var fornecedoresLote = new[] { "Samsung", "Apple", "Xiaomi", "Motorola", "LG" };

            categorias.AddRange(Array.ConvertAll(categoriasLote, nome => new Categoria(nome)));
            fornecedores.AddRange(Array.ConvertAll(fornecedoresLote, nome => new Fornecedor(nome)));

            var produtosLote = new[]
            {
                new { Nome = "Galaxy S21", CategoriaIndex = 0, FornecedorIndex = 0 },
                new { Nome = "iPhone 13", CategoriaIndex = 1, FornecedorIndex = 1 },
                new { Nome = "Redmi Note 10", CategoriaIndex = 2, FornecedorIndex = 2 },
                new { Nome = "Moto G100", CategoriaIndex = 3, FornecedorIndex = 3 },
                new { Nome = "LG Velvet", CategoriaIndex = 4, FornecedorIndex = 4 }
            };

            foreach (var produto in produtosLote)
                produtos.Add(new Produto(produto.Nome, categorias[produto.CategoriaIndex], fornecedores[produto.FornecedorIndex]));

            Console.WriteLine("Banco de dados inicializado!");
        }
    }
}
